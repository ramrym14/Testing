
services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: unless-stopped
    ports:
      - "8080:8080"  # Jenkins UI
      # - "50000:50000"  # Agent communication (optional)
    volumes:
      - jenkins_home:/var/jenkins_home  # Persistent Jenkins data
      - /var/run/docker.sock:/var/run/docker.sock  # Allow Jenkins to control Docker
      - "/c/Users/YOGA X380/.ssh:/var/jenkins_home/.ssh:ro"  # Mount your host SSH keys into Jenkins
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false  # Disable setup wizard
    user: root

  playwright:
    build: .
    container_name: playwright
    ports:
      - "8000:8000"  
    # aucun bind-mount global pour ne PAS écraser node_modules
    networks:
      - app-network
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    working_dir: /app
    labels:
      - "com.docker.swarm.service.name=playwright"

  prometheus:
   image: prom/prometheus:latest
   container_name: prometheus
   ports:
    - "9090:9090"
   volumes:
    - ./prometheus:/etc/prometheus  # ✅ assure-toi que ./prometheus/prometheus.yml existe
   command:
    - '--config.file=/etc/prometheus/prometheus.yml'
   networks:
    - app-network


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      # 1) Grafana’s own DB for dashboards, users, etc.
      - grafana_data:/var/lib/grafana

      # 2) Provisioning: datasources (Prometheus)
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro

      # 3) Provisioning: dashboard providers
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro

      # 4) The actual JSON dashboards to import
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - app-network
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    ports:
      - "8081:8080"         # cAdvisor UI
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network
    command:
      - "--docker_only=true"
      - "--housekeeping_interval=10s"
      - "--store_container_labels=true"
      - "--whitelisted_container_labels=com.docker.swarm.service.name"






networks:
  app-network:
    driver: bridge

volumes:
  jenkins_home:
    driver: local
  grafana_data:
    driver: local